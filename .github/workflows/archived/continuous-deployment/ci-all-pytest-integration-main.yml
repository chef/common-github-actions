# dispatch and main integration tests with pytest from local /test/integration directory
name: Run pytest integration tests  (dispatch)

on:
  push:
    branches:
      - main
        
  workflow_dispatch:

jobs:   
  py-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # - name: Lint with Ruff
      #   run: |
      #     pip install ruff
      #     ruff --format=github --target-version=py310 .
      #   continue-on-error: true

      # need to allow this in GHA (at org level)
      # download any tools required, curl, or CLI-latest (using https://github.com/marketplace/actions/release-downloader)
      # - uses: robinraju/release-downloader@v1
      #   with:
      #     repository: 'chef/arch-sample-cli'
      #     latest: true
      #     # Download assets from a specific tag/version - e.g: v1.0.1
      #     tag: ''
      #     # The name of the file to download.
      #     # Use this field only to specify filenames other than tarball or zipball, if any.
      #     # Supports wildcard pattern (eg: '*', '*.deb', '*.zip' etc..)
      #     fileName: ''
      #     out-file-path: 'bin'
      #     extract: true
      #     # Github access token to download files from private repositories
      #     # https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets
      #     # eg: token: ${{ secrets.MY_TOKEN }}
      #     token: ''
    
      - name: Download CLI release with curl
        run: |
          curl -Lo $RUNNER_TEMP/arch-sample-cli.tar.gz https://github.com/chef/arch-sample-cli/releases/download/v2.4.1/arch-sample-cli_.v2.4.1_Linux_x86_64.tar.gz
        # tar -xzvf $RUNNER_TEMP/arch-sample-cli.tar.gz
        # rm $RUNNER_TEMP/arch-sample-cli.tar.gz"
        # chmod +x $RUNNER_TEMP/arch-sample-cli
      
      - name: create folder
        run: |
          mkdir ./test/report
        if: ${{ always() }}
      
      - name: Test with pytest
        run: |
          pytest ./test/integration --html=./test/report/report.html 
        if: ${{ always() }}
      # - name: Generate Coverage Report - use pytest-cov
      #   run: |
      #     coverage report -m
      - name: Upload HTML test report
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-integration-test-report
          path: ./test/report
        if: ${{ always() }}
